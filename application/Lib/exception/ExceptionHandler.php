<?php
/**
 * Create by PhpStorm
 * User: Chan
 * Date: 2021/6/22
 * Time: 22:41
 */

namespace app\Lib\exception;


use Exception;
use think\exception\Handle;
use think\Log;
use think\Request;

class ExceptionHandler extends Handle
{
    private $code;
    private $msg;
    private $errorCode;
    public function render(Exception $e)
    {
//        return parent::render($e); // TODO: Change the autogenerated stub
//        return json('自定义异常返回');

        if($e instanceof BaseException){
            $this->code = $e->code;
            $this->msg = $e->msg;
            $this->errorCode = $e->errorCode;
        }else{
            if(config('app_debug')){
                return parent::render($e);
            }else{
                $this->code = 500;
                $this->msg = '服务器错误，不想告诉你';
                $this->errorCode = 999;
                $this->recordErrorLog($e);
            }
        }

        $request = Request::instance();

        $res = [
            'msg'           => $this->msg,
            'error_code'    => $this->errorCode,
            'request_url'   => $request->url(),
        ];
        return json($res,$this->code);
    }

    private function recordErrorLog(Exception $e){
        Log::init([
            'type'  => 'File',
            'path'  => LOG_PATH,
            'level' => ['error'],
        ]);
        Log::record($e->getMessage(), 'error');
    }
}